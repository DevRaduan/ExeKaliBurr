#!/bin/bash

figlet ExeKaliBurr v1.0	# Banner do Projeto
echo "By: Drezens"
echo " "
sleep 3

# Sempre que tiver ">> relatorio.txt" é uma exportação para o arquivo .txt
figlet ExeKaliBurr v1.0 >> relatorio.txt
#echo "ExeKaliBurr v1.0" >> relatorio.txt
echo "By: Drezens" >> relatorio.txt
#clear

#echo "Digite o Domínio da Página Web que Será Explorada (Ex: www.google.com.br)"	# Entrada Principal do Nome do Site Alvo
#read ende
#echo " "
#echo "Selecione a Opção Correspondente ao Protocolo Ativo no Domínio"	# Pergunta ao usuário sobre qual protocolo está ativo no site
#echo "Digite 1 para 'HTTP' ou 2 para 'HTTPS': "
#read resposta

#if [ $resposta -eq 1 ]	# Se resposta for 1 = Protocolo HTTP
#then
#	endereco=http://$ende	# Concatenação do nome do site com http://
	#echo "Alvo Definido: $endereco"
	
#elif [ $resposta -eq 2 ]	# Se resposta for 2 = Protocolo HTTPS
#then
#	endereco=https://$ende	# Concatenação do nome do site com https://
	#echo "Alvo Definido: $endereco"
#else
#	echo "Erro! Opção Inválida..."	# Tratamento de Erros, se o usuário entrou com opção inválida finalizamos o script com "exit"
#	exit
#fi

# Se não receber 2 parâmetros, fecha o script
if [ $# -ne 2 ]
then
	echo "Erro! Quantidade Inesperada de Parâmetros..."
	echo "Por Favor, Insira os Parâmetros de Entrada no Formato: 'PROTOCOLO SITE'"
	echo "Exemplo de Execução: ./kalibur https google.com.br"
	exit
fi

# For pra pegar as informações nos Parâmetros Inseridos
contaPara=0
for correPara in "$@"
do
	if [ $contaPara -eq 0 ]	# Se é o primeiro parâmetros, lemos o Protocolo HTTP ou HTTPS
	then
		proto=$correPara
	fi
	
	if [ $contaPara -eq 1 ]	# Se é o segundo parâmetros, lemos o endereço do site
	then
		ende=$correPara
	fi
	
	contaPara=$((contaPara+1))
done

# Verificação pra saber se o usuário colocou um protocolo errado
verif=0
if [ $proto == "http" ]
then
	verif=1
fi

if [ $proto == "https" ]
then
	verif=1
fi

# Se o cara não digitou http ou https, fecho o script
if [ $verif -ne 1 ]
then
	echo "Erro! Protocolo Inválido..."
	echo "Por Favor, Insira 'http' ou 'https' no Primeiro Parâmetro!"
	echo "Exemplo de Execução: ./kalibur https google.com.br"
	exit
fi

#construção do DNS completo
endereco=$proto://$ende

while true	# Laço para atualizar a barra de progresso
do
	echo -n =
	sleep 1
	done &
	trap "kill $!" SIGTERM SIGKILL	# Processo para acompanhar o progresso dos scripts
	echo " "
	echo "####################################"
	echo "###   Realizando Exploração...   ###"
	echo "####################################"
	echo " "
	
	
	echo " " >> relatorio.txt
	echo "###########################################" >> relatorio.txt
	echo "### 	Identificação de Endereço IP 	###" >> relatorio.txt
	echo "###########################################" >> relatorio.txt
	echo " " >> relatorio.txt
	echo "Alias Pesquisado: $ende" >> relatorio.txt

	#ip=$(host $ende | grep address | cut -d " " -f4) # Primeira Forma de achar IP pelo Host
	ip=$(whatweb -v $ende | grep IP | cut -d " " -f10)	# # Segunda Forma de achar IP pelo WhatWeb
	echo "Endereço IP Descoberto:$ip" >> relatorio.txt
	echo " " >> relatorio.txt
	echo "Outras Informações Relacionadas aos Endereçamentos IP do Alvo: " >> relatorio.txt
	iphost=$(host $ende)	# Variável IPhost para armazenar informações do serviço Host
	echo "$iphost" >> relatorio.txt 
	echo "> Identificações de Endereçamentos IP ✔"


	echo " " >> relatorio.txt
	echo "############################################" >> relatorio.txt
	echo "### 	Scanner de Portas de Redes	 ###" >> relatorio.txt
	echo "############################################" >> relatorio.txt
	echo " " >> relatorio.txt
	portas=$(nmap -sV $ip | grep open)

	echo "Portas	Estados	Serviços	Versões" >> relatorio.txt
	echo "$portas" >> relatorio.txt
	echo "> Scanner de Portas ✔"
	
	
	echo " " >> relatorio.txt
	echo "###################################" >> relatorio.txt
	echo "###	Varredura de Diretórios	###" >> relatorio.txt
	echo "###################################" >> relatorio.txt
	echo " " >> relatorio.txt
	
	# Mexi aqui dia 27-05 ... to tendo problemas com o Gobuster, vou voltar a usar o dirb
	#dir=$(gobuster dir -u $ip -w directory-list-2.3-medium.txt -b 301,302,404) #| grep http)
	
	#if [ $resposta -eq 1 ]	# Se resposta for 1 = Protocolo HTTP
	#then
	#	ipfull=http://$ip	# Concatenação IP com http://
	#else
	#	ipfull=https://$ip	# Concatenação IP com https://
	#fi
	
	if [ $proto == "http" ]
	then
		ipfull=http://$ende
	else
		ipfull=https://$ende
	fi
	
	#ipfull=($proto://$ende)
	
	#dir=$(dirb $proto://$ende | grep http)
	dir=$(dirb $ipfull -w | grep CODE)	# -r é ñ recurciva -w é não para com erro
	echo "$dir" >> relatorio.txt
	echo "> Varredura de Diretórios ✔"
	
	
	echo " " >> relatorio.txt
	echo " " >> relatorio.txt
	echo "############################################" >> relatorio.txt
	echo "### 	Informações Gerais do Domínio	 ###" >> relatorio.txt
	echo "############################################" >> relatorio.txt
	echo " " >> relatorio.txt
	dados=$(whois $ip)	# Estamos fazendo a pesquisa dos dados por protocolo WhoIs buscando pelo IP do alvo
	echo "$dados" >> relatorio.txt
	echo " " >> relatorio.txt
	echo " " >> relatorio.txt
	dados=$(whatweb -v $ende)
	echo "$dados" >> relatorio.txt
	echo "> Levantamento de Informações Gerais ✔"
	
	
	echo " " >> relatorio.txt
	echo " " >> relatorio.txt
	echo "####################################################" >> relatorio.txt
	echo "### 	Banner da Página HTML Inicial do Alvo	 ###" >> relatorio.txt
	echo "####################################################" >> relatorio.txt
	echo " " >> relatorio.txt
	banner=$(curl -v $ende)
	echo "$banner" >> relatorio.txt
	echo "> Banner da Página HTML Inicial ✔"


	echo " " >> relatorio.txt
	echo "####################################" >> relatorio.txt
	echo "### 	DNS Reverso do Domínio	 ###" >> relatorio.txt
	echo "####################################" >> relatorio.txt
	echo " " >> relatorio.txt
	reverso=$(dnsrecon -r $ip/24 -n 8.8.8.8)	# Gambiarra para colocar o /24 no fim do IP alvo, 8.8.8.8 pedindo ajuda pro Google fazer o recon
	echo "$reverso" >> relatorio.txt
	echo "> DNS Reverso do Domínio ✔"


	echo " " >> relatorio.txt
	echo "############################################" >> relatorio.txt
	echo "### 	Sub-DNS & Sistemas Integrados	 ###" >> relatorio.txt
	echo "############################################" >> relatorio.txt
	echo " " >> relatorio.txt
	subdns=$(dnsmap $ende)		# Por causa dessa função aqui eu vou precisar mudar uma caralhada de coisa... ela ñ gosta dos protocolos http ou https
	echo "$subdns" >> relatorio.txt
	echo "> Sub-DNS & Sistemas Integrados ✔"


	echo " " >> relatorio.txt
	data=$(date)
	echo "Exploração Realizada em: $data" >> relatorio.txt
	
	#clear
	echo " "
	echo "=> Exploração Finalizada! ✔ "
	#echo "=> \033[32m;5m Exploração Finalizada! ✔ \033[m" # testar pra ver se a mensagem fica verdinha e piscando
kill $!
